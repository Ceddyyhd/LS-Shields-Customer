{
  "version": 3,
  "sources": ["../../src/themes/bubble.ts"],
  "sourcesContent": ["import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false, Quill.sources.USER);\n          } else {\n            // @ts-expect-error\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport { BubbleTooltip, BubbleTheme as default };\n"],
  "mappings": "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",
  "names": ["TOOLBAR_CONFIG", "header", "BubbleTooltip", "BaseTooltip", "constructor", "quill", "bounds", "on", "Emitter", "events", "EDITOR_CHANGE", "type", "range", "oldRange", "source", "SELECTION_CHANGE", "length", "sources", "USER", "show", "root", "style", "left", "width", "offsetWidth", "lines", "getLines", "index", "getBounds", "position", "lastLine", "getIndex", "Math", "min", "indexBounds", "Range", "document", "activeElement", "textbox", "hasFocus", "hide", "listen", "querySelector", "addEventListener", "classList", "remove", "SCROLL_OPTIMIZE", "setTimeout", "contains", "getSelection", "cancel", "reference", "shift", "arrow", "marginLeft", "TEMPLATE", "join", "BubbleTheme", "BaseTheme", "options", "modules", "toolbar", "container", "add", "extendToolbar", "tooltip", "appendChild", "buildButtons", "querySelectorAll", "icons", "buildPickers", "DEFAULTS", "merge", "handlers", "link", "value", "format", "Quill", "theme", "edit"]
}
